{"version":3,"sources":["vendor/Framework7_custom/js/app.js"],"names":[],"mappingsfile":"priv/static/js/mobile.js","sourcesContent":["var $$ = Dom7;\n\nfunction setToken(jwt) {\n  token = {value: jwt, timestamp: new Date().getTime()};\n  localStorage.setItem(\"token\", JSON.stringify(token));\n}\n\nfunction socketConnect(jwt) {\n  var socket = new window.Socket(\"/refresh_socket\", {params: {guardian_token: jwt}});\n  socket.connect();\n\n  var channel = socket.channel(\"login_refresh:interactive\", {});\n\n  channel.join()\n    .receive(\"error\", function(resp) { exMoney.alert('Could not connect to WebSocket channel') });\n\n  window.channel = channel;\n\n  applyBindings(window.channel);\n}\n\nfunction applyBindings(channel) {\n  channel.on(\"refresh_request_ok\", function(data) {\n    exMoney.showPreloader([data.msg]);\n  })\n\n  channel.on(\"refresh_request_failed\", function(data) {\n    var account_id = $$(\"#account-refresh-content\").data(\"account-id\");\n    exMoney.alert(data.msg, function() {\n      mainView.router.back({url: '/m/accounts/' + account_id});\n    });\n  });\n\n  channel.on(\"ask_otp\", function(data) {\n    exMoney.hidePreloader();\n\n    var login_id = $$(\"#account-refresh-content\").data(\"login-id\");\n    var account_id = $$(\"#account-refresh-content\").data(\"account-id\");\n    var interactive = {status: true, account_id: account_id};\n    localStorage.setItem(\"interactive\", JSON.stringify(interactive));\n    exMoney.prompt('Please enter OTP', 'One Time Password',\n      function(value) {\n        channel.push(\"send_otp\", {otp: value, login_id: login_id, field: data.field});\n        localStorage.setItem(\"interactive\", JSON.stringify({status: false}));\n      },\n      function(value) {\n        channel.push(\"cancel_otp\", {});\n        localStorage.setItem(\"interactive\", JSON.stringify({status: false}));\n        mainView.router.back({url: '/m/accounts/' + account_id});\n      }\n    );\n  });\n\n  channel.on(\"not_supported_otp\", function(data) {\n    exMoney.hidePreloader();\n    localStorage.setItem(\"interactive\", JSON.stringify({status: false}));\n    exMoney.alert(data.msg);\n  });\n\n  channel.on(\"otp_sent\", function(data) {\n    var account_id = $$(\"#account-refresh-content\").data(\"account-id\");\n    exMoney.alert(data.title, data.msg, function () {\n      localStorage.setItem(\"interactive\", JSON.stringify({status: false}));\n      mainView.router.back({\n        url: '/m/accounts/' + account_id,\n        ignoreCache: true,\n        force: true\n      });\n    });\n  });\n\n  channel.on(\"transactions_fetched\", function(msg) {\n    exMoney.addNotification({title: msg.title, message: msg.message});\n  });\n}\n\nfunction deleteTransaction() {\n  $$('.tr-li').on('deleted', function (e) {\n    var id = $$(e.target).children(\"div.swipeout-actions-opened\").find(\"a.delete-transaction\").data('id');\n    var csrf = document.querySelector(\"meta[name=csrf]\").content;\n\n    $$.ajax({\n      url: '/m/transactions/' + id + \"?_format=json\",\n      contentType: \"application/json\",\n      type: 'DELETE',\n      headers: {\n        \"X-CSRF-TOKEN\": csrf\n      },\n      success: function(data, status, xhr) {\n        var response = JSON.parse(data);\n        if (response.new_balance) {\n          $$(\"#account_id_\" + response.account_id).text(response.new_balance);\n        }\n      },\n      error: function(xhr, status) {\n        alert(\"Something went wrong, check server logs\");\n      }\n    });\n  });\n}\n\nvar exMoney = new Framework7({\n  modalTitle: 'ExMoney',\n  scrollTopOnNavbarClick: true,\n  popupCloseByOutside: false,\n  tapHold: true,\n  tapHoldDelay: 500,\n\n  onPageInit: function(app, page) {\n    if (page.name == 'start-screen') {\n      if (localStorage.token) {\n        var jwt = JSON.parse(localStorage.token).value;\n\n        $$.ajax({\n          url: '/api/v1/session/relogin?_format=json',\n          type: 'GET',\n          contentType: \"application/json\",\n          headers: {\n            \"Authorization\": jwt\n          },\n          complete: function(xhr, status) {\n            if (xhr.responseText == \"Unauthenticated\") {\n              localStorage.removeItem(\"token\");\n              window.location.replace(\"/m/dashboard\");\n            }\n            else {\n              setToken(xhr.responseText);\n              socketConnect(xhr.responseText);\n\n              if (localStorage.interactive != undefined) {\n                var interactive = JSON.parse(localStorage.interactive);\n                if (interactive.status == true) {\n                  mainView.router.load({ url: '/m/accounts/' + interactive.account_id + '/refresh' });\n                } else {\n                  mainView.router.load({ url: '/m/dashboard', animatePages: false, reload: true });\n                }\n              } else { mainView.router.load({ url: '/m/dashboard', animatePages: false, reload: true }); }\n            }\n          }\n        });\n      } else {\n        window.location.replace(\"/m/dashboard\");\n      }\n    }\n\n    if (page.name == 'embedded-login-screen') {\n      $$('#embedded-login-form').on('submitted', function (e) {\n        var xhr = e.detail.xhr;\n        if (xhr.status == 200) {\n          exMoney.closeModal($$(\".embedded-login-screen\"));\n          setToken(xhr.responseText);\n          socketConnect(xhr.responseText);\n          mainView.router.load({ url: '/m/dashboard' });\n          window.history.pushState('m', '', '/m');\n        } else {\n          exMoney.alert(xhr.responseText);\n        }\n      });\n\n      $$('#login-form').on('submitError', function (e) {\n        var xhr = e.detail.xhr;\n\n        exMoney.alert(xhr.responseText);\n      });\n    }\n\n    if (page.name == 'login-screen') {\n      $$('#login-form').on('submitted', function (e) {\n        var xhr = e.detail.xhr;\n\n        if (xhr.status == 200) {\n          setToken(xhr.responseText);\n          socketConnect(xhr.responseText);\n          window.location.replace(\"/m/dashboard\");\n        } else {\n          exMoney.alert(xhr.responseText);\n        }\n      });\n\n      $$('#login-form').on('submitError', function (e) {\n        var xhr = e.detail.xhr;\n\n        exMoney.alert(xhr.responseText);\n      });\n    }\n\n    if (page.name == 'overview-screen') {\n      deleteTransaction();\n\n      $$(\"#fav_tr_open\").on(\"click\", function(e) {\n        $$('.speed-dial-opened').removeClass('speed-dial-opened');\n        var fav_tr_popup = $$('#fav_tr_popup');\n        exMoney.popup(fav_tr_popup);\n\n        var csrf = document.querySelector(\"meta[name=csrf]\").content;\n        var fav_calculator = exMoney.keypad({\n          input: '#new-fav-transaction-amount',\n          scrollToInput: false,\n          type: 'calculator',\n          onClose: function(p) {\n            $$.ajax({\n              url: '/m/transactions/create_from_fav',\n              contentType: \"application/json\",\n              type: 'POST',\n              data: JSON.stringify(exMoney.formToData('#fav_tr_form')),\n              headers: {\n                \"X-CSRF-TOKEN\": csrf\n              },\n              success: function(data, status, xhr) {\n                if (xhr.status == 200) {\n                  exMoney.closeModal(fav_tr_popup);\n                  mainView.router.refreshPage();\n                } else {\n                  exMoney.alert(xhr.responseText);\n                }\n              },\n              error: function(xhr, status) {\n                alert(\"Something went wrong, check server logs\");\n              }\n            });\n          }\n        });\n\n        $$('#fav_tr_popup').on('opened', function() {\n          fav_calculator.open();\n        });\n\n      });\n    }\n  }\n});\n\nvar mainView = exMoney.addView('.view-main');\n\nfunction adjustSelectedCategory() {\n  var category = $$('a.smart-category-select div.item-content div.item-inner div.item-after');\n  category.text(category.text().replace(/\\u21b3/g, \"\"));\n};\n\nexMoney.onPageInit('account-income-screen', function(page) {\n  deleteTransaction();\n});\n\nexMoney.onPageInit('account-expenses-screen', function(page) {\n  deleteTransaction();\n});\n\nexMoney.onPageInit('transactions-screen', function(page) {\n  deleteTransaction();\n});\n\nexMoney.onPageInit('budget-expenses-screen', function(page) {\n  deleteTransaction();\n});\n\nexMoney.onPageInit('budget-income-screen', function(page) {\n  deleteTransaction();\n});\n\nexMoney.onPageInit('settings-budget-page', function(page) {\n  console.log('foo');\n  $$('.budget-account').on('click', function (e) {\n    var id = $$(this).data('id');\n    var swipeout_line = $$(this);\n    var csrf = document.querySelector(\"meta[name=csrf]\").content;\n\n    $$.ajax({\n      url: '/m/settings/budget/setup',\n      contentType: \"application/json\",\n      data: JSON.stringify({account_id: id}),\n      type: 'PUT',\n      headers: {\n        \"X-CSRF-TOKEN\": csrf\n      },\n      success: function(data, status, xhr) {\n        $$(swipeout_line.parent().parent()).find('.item-after').remove();\n        include_to_budget = JSON.parse(data).include_to_budget;\n        if (include_to_budget) {\n          $$(swipeout_line.parent()).find('i').text('close');\n          $$(\"<div class='item-after'><i class='f7-icons color-blue'>check</i></div>\").insertAfter($$(\"#account_tr_\"+id));\n        } else {\n          $$(swipeout_line.parent()).find('i').text('check');\n        }\n        exMoney.swipeoutClose($$(swipeout_line.parent().parent()));\n      },\n      error: function(xhr, status) {\n        alert(JSON.parse(xhr.response).msg);\n        exMoney.swipeoutClose($$(swipeout_line.parent().parent()));\n      }\n    });\n  });\n});\n\nexMoney.onPageInit('favourite-transactions-screen', function(page) {\n  $$('.back').on('click', function(e) {\n    $$('.speed-dial-opened').removeClass('speed-dial-opened');\n  });\n\n  $$('.fav-transaction').on('click', function (e) {\n    var id = $$(this).data('id');\n    var swipeout_line = $$(this);\n    var csrf = document.querySelector(\"meta[name=csrf]\").content;\n\n    $$.ajax({\n      url: '/m/favourite_transactions/' + id + \"/fav?_format=json\",\n      contentType: \"application/json\",\n      type: 'PUT',\n      headers: {\n        \"X-CSRF-TOKEN\": csrf\n      },\n      success: function(data, status, xhr) {\n        $$('.item-after').remove();\n        $$(\"<div class='item-after'><i class='f7-icons color-red'>heart</i></div>\").insertAfter($$(\"#fav_tr_\"+id));\n        exMoney.swipeoutClose($$(swipeout_line.parent().parent()));\n      },\n      error: function(xhr, status) {\n        alert(\"Something went wrong, check server logs\");\n      }\n    });\n  });\n\n  $$('.fav-tr-li').on('deleted', function (e) {\n    var id = $$(e.target).children(\"div.swipeout-actions-opened\").find(\"a.delete-transaction\").data('id');\n    var csrf = document.querySelector(\"meta[name=csrf]\").content;\n\n    $$.ajax({\n      url: '/m/favourite_transactions/' + id + \"?_format=json\",\n      contentType: \"application/json\",\n      type: 'DELETE',\n      headers: {\n        \"X-CSRF-TOKEN\": csrf\n      },\n      success: function(data, status, xhr) {},\n      error: function(xhr, status) {\n        alert(\"Something went wrong, check server logs\");\n      }\n    });\n  });\n});\n\nexMoney.onPageInit('budget-screen', function (page) {\n  $$('a.category-bar').on('taphold', function () {\n    var category_id = $$(this).data(\"category-id\");\n    var date = page.query.date || $$(\"#current_date\").data(\"current-date\");\n\n    mainView.router.load({\n      url: '/m/transactions?category_id='+category_id+'&date='+date+'&type=expenses',\n      ignoreCache: true\n    });\n  });\n});\n\nexMoney.onPageInit('account-screen', function (page) {\n  $$('a.category-bar').on('taphold', function () {\n    var category_id = $$(this).data(\"category-id\");\n    var date = page.query.date || $$(\"#current_date\").data(\"current-date\");\n    var account_id = $$(\"#account_id\").data(\"account-id\");\n\n    mainView.router.load({\n      url: '/m/transactions?category_id='+category_id+'&date='+date+'&account_id='+account_id,\n      ignoreCache: true\n    });\n  });\n});\n\nexMoney.onPageInit('edit-category-screen', function (page) {\n  $$('form.ajax-submit').on('submitted', function (e) {\n    var xhr = e.detail.xhr;\n\n    if (xhr.status == 200) {\n      mainView.router.back({\n        url: '/m/settings/categories',\n        ignoreCache: true,\n        force: true\n      });\n    } else {\n      exMoney.alert(xhr.responseText);\n    }\n  });\n});\n\nexMoney.onPageInit('edit-transaction-screen', function (page) {\n  adjustSelectedCategory();\n\n  $$('#transaction_category_id').on('change', function(e) {\n    setTimeout(function() { adjustSelectedCategory(); }, 100);\n  });\n\n  $$('form.ajax-submit').on('submitted', function (e) {\n    var xhr = e.detail.xhr;\n\n    if (xhr.status == 200) {\n      mainView.router.back({\n        url: xhr.responseText,\n        ignoreCache: true,\n        force: true\n      });\n    } else {\n      exMoney.alert(xhr.responseText);\n    }\n  });\n});\n\nexMoney.onPageInit('new-transaction-screen', function (page) {\n  adjustSelectedCategory();\n\n  $$('#new_transaction_back').on('click', function(e) {\n    $$('.speed-dial-opened').removeClass('speed-dial-opened');\n  });\n\n  $$('#transaction_category_id').on('change', function(e) {\n    setTimeout(function() { adjustSelectedCategory(); }, 100);\n  });\n\n  var calculator = exMoney.keypad({\n    input: '#new-transaction-amount',\n    toolbar: false,\n    type: 'calculator'\n  });\n\n  calculator.open();\n\n  var calendar = exMoney.calendar({\n    input: '#transaction_made_on',\n    toolbar: false,\n    scrollToInput: false,\n    closeOnSelect: true,\n    value: [new Date()]\n  });\n\n  $$('form.ajax-submit').on('submitted', function (e) {\n    var xhr = e.detail.xhr;\n\n    if (xhr.status == 200) {\n      mainView.router.back({\n        url: '/m/dashboard',\n        ignoreCache: true,\n        force: true\n      });\n    } else {\n      exMoney.alert(xhr.responseText);\n    }\n  });\n\n  $$('a#expense-button').on('click', function (e) {\n    $$('a#expense-button').addClass('active');\n    $$('a#income-button').removeClass('active');\n    $$('#transaction_type').val('expense');\n  });\n\n  $$('a#income-button').on('click', function (e) {\n    $$('a#income-button').addClass('active');\n    $$('a#expense-button').removeClass('active');\n    $$('#transaction_type').val('income');\n  });\n});\n\nexMoney.onPageInit('new-favourite-transaction-screen', function (page) {\n  adjustSelectedCategory();\n\n  $$('.back').on('click', function(e) {\n    $$('.speed-dial-opened').removeClass('speed-dial-opened');\n  });\n\n  $$('#transaction_category_id').on('change', function(e) {\n    setTimeout(function() { adjustSelectedCategory(); }, 100);\n  });\n\n  $$('form.ajax-submit').on('submitted', function (e) {\n    var xhr = e.detail.xhr;\n\n    if (xhr.status == 200) {\n      mainView.router.back({\n        url: '/m/favourite_transactions',\n        ignoreCache: true,\n        force: true\n      });\n    } else {\n      exMoney.alert(xhr.responseText);\n    }\n  });\n\n  $$('a#expense-button').on('click', function (e) {\n    $$('a#expense-button').addClass('active');\n    $$('a#income-button').removeClass('active');\n    $$('#transaction_type').val('expense');\n  });\n\n  $$('a#income-button').on('click', function (e) {\n    $$('a#income-button').addClass('active');\n    $$('a#expense-button').removeClass('active');\n    $$('#transaction_type').val('income');\n  });\n});\n\nexMoney.onPageInit('account-refresh-screen', function (page) {\n  var login_id = $$(\"#account-refresh-content\").data(\"login-id\");\n\n  var channel = window.channel;\n\n  if (localStorage.interactive == undefined || JSON.parse(localStorage.interactive).status == false) {\n    channel.push(\"send_refresh_request\", {login_id: login_id});\n  }\n});\n"]}